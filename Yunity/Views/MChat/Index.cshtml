@using Microsoft.AspNetCore.Identity
@using Yunity.Areas.Identity.Data
@using Microsoft.EntityFrameworkCore;
@inject SignInManager<YunityUser> SignInManager
@inject UserManager<YunityUser> UserManager
@inject BuildingDataContext _buildingDataContext

@{
    Layout = "_LayoutManager";
    ViewData["Title"] = "住戶訊息";
}
<head>
    <link type="text/css" rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/south-street/jquery-ui.css">
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</head>
<style>
    .row > .col-3 {
        margin-right: 0 !important;
        padding-right: 0 !important;
        padding-left: 0 !important;
        border-radius: 15px 0 0 15px;
        overflow: hidden;
    }

    .row > .col-9 .col-md-12 {
        margin-right: 0 !important;
        padding-right: 0 !important;
        padding-left: 0 !important;
        border-radius: 0 15px 15px 0;
        overflow: hidden;
    }

    .form-control {
        padding: 0.75rem 1rem !important; /* 增加內邊距 */
    }
</style>
@if (SignInManager.IsSignedIn(User))
{
    var user = await UserManager.GetUserAsync(User);
    <input type="hidden" id="userData" data-user-id="@user.Id" />
}
<div class="container mt-4">
    <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index","Concierge")">首頁</a></li>
            <li class="breadcrumb-item active" aria-current="page">住戶訊息</li>
        </ol>
    </nav>
</div>

<div class="container mt-4">
    <div class="row">
        <div class="col-3" style="margin-right: 0; border: 1px solid rgb(221, 221, 221);">
            <ul id="" class="chatName" style="margin-right: 0;">
                <li class="title_li">
                    <h3 class="ps-1" style="padding:0; margin:0">住戶訊息</h3>
                </li>
                <li class="keyword_li">
                    <input type="text" class="keyword" style="border-radius: 50px 0 0 50px; width:85%" id="keyword" placeholder="請輸入關鍵字" />
                    <div>
                        <span class="material-symbols-outlined keyword_div" style="border-radius: 0 50px 50px 0; font-size:1.5rem; color: #A9A9A9" id="search-icon">
                            search
                        </span>
                    </div>
                </li>
            </ul>
            <div style="">
                <ul id="chatName" class="chatName" style="overflow-y: auto;">
                </ul>
            </div>
            <div class="card_footer">
            </div>
        </div>
        <div class="col-9">
            <div class="row" id="chatRoom">
                <div class="col-md-12" style="border: 1px solid rgb(221, 221, 221);">
                    <div class="" style="height:auto; width:auto;">
                        <div class="card_header">
                            <div class="d-flex justify-content-between" style="height: 48.37px; align-items: center;">
                                <h5 id="menbername" style="padding: 0; margin: 0;"></h5>

                            </div>
                        </div>
                        <div class="card_body">
                            <div class="mb-3" id="room">
                            </div>
                            <div class="input_group" style="border-top: 1px solid rgb(221, 221, 221);">
                                <input id="txtMsg" class="form-control" type="text" value="" style="border-radius: 25px; font-size: 1rem; width:95%" />
                                <button class="sendbtn" type="button" id="send">
                                    <svg xmlns="http://www.w3.org/2000/svg" style="height: 28px;" viewBox="0 0 512 512">
                                        <path fill="#31515e" d="M498.1 5.6c10.1 7 15.4 19.1 13.5 31.2l-64 416c-1.5 9.7-7.4 18.2-16 23s-18.9 5.4-28 1.6L284 427.7l-68.5 74.1c-8.9 9.7-22.9 12.9-35.2 8.1S160 493.2 160 480V396.4c0-4 1.5-7.8 4.2-10.7L331.8 202.8c5.8-6.3 5.6-16-.4-22s-15.7-6.4-22-.7L106 360.8 17.7 316.6C7.1 311.3 .3 300.7 0 288.9s5.9-22.8 16.1-28.7l448-256c10.7-6.1 23.9-5.5 34 1.4z" />
                                    </svg>
                                </button>
                            </div>
                        </div>
                        <div class="card_footer"></div>
                    </div>
                </div>
            </div>
            <div id="liveToast" class="toast align-items-center text-white bg-danger border-0 bottom-0 start-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        請輸入傳送訊息！
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        window.onload = function () {
            loadchatName();
        };
        const userData = document.getElementById('userData');
        const managerId = userData.getAttribute('data-user-id');
        console.log(managerId)
        var chat_Info = [];
        var chat_user = [];
        function loadchatName() {
            var idx = 0;
            let keyword_json = { "Keyword": document.getElementById("keyword").value };
            fetch("/MChat/Chat_room", {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(keyword_json)
            })
            .then(response => response.json())
            .then(data => {
                let chatName = document.getElementById("chatName");
                chatNamehtml = "";
                chatNamehtml += data.length === 0 ?
                    `<div><p>沒有訊息</p></div>` : '';
                data.forEach((Chat_room) => {
                    let now = new Date(Chat_room.lastMsgTime);
                    let nowMoment = moment(now);
                    let today = moment().format('YYYY-MM-DD');

                    let displayTime = nowMoment.format('YYYY-MM-DD') === today
                        ? nowMoment.format('HH:mm')
                        : nowMoment.format('YYYY-MM-DD');
                    chatNamehtml += `<li
                                        class="chat_item"
                                        onclick="chat(${idx})"
                                        id="chat_Info-${idx}"
                                    >
                                        <div class="chat_avatar">
                                            <img src="/images/頭像.png" />
                                        </div>
                                        <div class="chat_info">
                                            <p class="chat_name">${Chat_room.fName}</p>
                                            <div class="chat_preview_container">
                                                <small class="chat-preview">${Chat_room.msgText}</small>
                                                <small class="chat-time">${displayTime}</small>
                                            </div>
                                        </div>
                                    </li>`;
                    chat_Info[idx] = Chat_room.roomId;
                    chat_user[idx] = Chat_room.fName;
                    idx += 1;
                });
                document.getElementById("chatName").innerHTML = "";  
                document.getElementById("chatName").innerHTML += chatNamehtml;  
                chat(0);
            })
            .catch(error => console.error("Error:", error));

        }
        var userId = "";
        var txtUser = "";
        const chatRoom = document.querySelector('#chatRoom');
        const txtMsg = document.querySelector('#txtMsg');
        const liveToast = document.querySelector('#liveToast');
        const room = document.querySelector('#room');
        const send = document.querySelector('#send');
        function chat(idx){
            document.getElementById("menbername").textContent = chat_user[idx];
            var chat_Info1 = document.getElementById(`chat_Info-${idx}`).value;
            txtUser = chat_Info[idx];
            userId = chat_Info[idx];
            console.log(chat_Info[idx]);
            Msgbtn();
        }


        var socket;
        function Msgbtn() {
            if (socket != null)
            {
                socket.close();
            }
            
            var User_json = new FormData();
            User_json.append("RoomId", userId);
            console.log(txtUser);
            console.log(userId);
            console.log(User_json);
            fetch("/MChat/Chat_room_Detail", {
                method: "POST",
                body: User_json
            })
            .then(response => response.text())
            .then(html => {
                document.getElementById("room").innerHTML = html;
                // const myFile = document.querySelector("#myFile");
                // const form = document.querySelector('.needs-validation');
               
                room.scrollTop = room.scrollHeight;
                socket = new WebSocket("ws://localhost:8080?roomid=" + userId);
                const closebtn = document.querySelector('#closebtn');

                //連線建立成功
                socket.onopen = (event) => {

                    //顯示chatRoom
                    chatRoom.style.display = "flex";

                    //隱藏form
                    //form.style.display = "none";

                    const data = {
                        Type: "newUser",
                        User: txtUser
                    }
                    console.log(data);
                    socket.send(JSON.stringify(data));
                };

                //接收WebSocket傳送過來的資料
                socket.onmessage = (event) => {
                    var data = JSON.parse(event.data);
                    console.log(data);
                    if (data.Type === "newUser") {
                        room.innerHTML += `<div class="alert alert-info my-2 py-2">${data.User} 已加入聊天室</div>`;
                        myAudio.src = "music/msn.mp3";
                        myAudio.play();
                    } else if (data.Type === "message") {
                        showMessage(data);
                    }
                };

                //關閉WebSocket連線
                socket.onclose = (event) => {
                    console.log(event);
                };

                //WebSocket連線發生錯誤
                socket.onerror = (error) => {
                    console.error(error);
                };

                
               
            })
            .catch(error => console.error("載入失敗", error));
        }

        //按下enter送出訊息
        txtMsg.addEventListener("keyup", function (event) {
            if (event.keyCode === 13) {
                event.preventDefault();
                console.log("A");
                sendMessage();
            }
        });

        //按下send送出訊息
        send.addEventListener("click", function (event) {
            console.log("B");
            sendMessage();
        });


        //傳送訊息
        function sendMessage() {
            const nowTime = moment().format('HH:mm');
            const data = {
                Type: "message",
                User: txtUser.value,
                Message: txtMsg.value,
                TargetRoomId: userId,
                MsgTime: nowTime
            }
            console.log(data);
            socket.send(JSON.stringify(data));
            const txtMsg_val = txtMsg.value;
            txtMsg.value = "";

            const bubble = `
                            <div class="message message-right mine">
                                <div class="time">${data.MsgTime}</div>
                                <div class="message last">${data.Message}</div>
                            </div>
                            `;
            room.innerHTML += bubble;
            room.scrollTop = room.scrollHeight;
            var form = new FormData();
            form.append("RoomId", userId);
            form.append("MangerId", managerId);
            form.append("MsgText", txtMsg_val);
            fetch('/MChat/Save_Msg', {
                method: 'POST',
                body: form
            })
            .then(response => response.json())
            .then(data => {
                loadchatName();
            })
            .catch(error => {
                console.error('錯誤:', error);
            });
        }

        //顯示訊息
        function showMessage(msg) {
            const bubble = `<div class="message message-left">
                                <div class="bubble-left">${msg.Message}</div>
                                <div class="time">${msg.MsgTime}</div>
                            </div>
                            `;
            room.innerHTML += bubble;
            room.scrollTop = room.scrollHeight;
        }

    </script>
}