@{
    Layout = "_LayoutUser";
    ViewData["Title"] = "Index";
}

 <style>
        
        #calendar-container {
            width: 100%;  
            height: 75vh;  
            display: flex;
            justify-content: center;  
            align-items: center; 
            color: black !important;
        }

        #calendar {
            width: 100%;  
            height: 100%;  
        background-color: white;
        }
        
        .fc-daygrid-day-number {
            color: #222;  
            font-weight: bold;  
        }
        
        .fc-col-header-cell {
            color: #222;  
            font-weight: bold; 
        }

         
        .fc-event-title {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 100px;
            position: relative; 
        }

        
        .fc-tooltip {
            font-size: 14px;
            line-height: 1.5;
            border-radius: 4px;
        }

        a {
            color: black;
        }
    </style>

    <div class="container">
<div id="calendar"></div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const calendarEl = document.getElementById('calendar');
            const calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                events: function (fetchInfo, success, failure) {
                    fetch(`/RECalendar/GetEvents?start=${fetchInfo.startStr}&end=${fetchInfo.endStr}`)
                        .then(response => response.json())
                        .then(data => success(data))
                        .catch(error => failure(error));
                },
                eventMouseEnter: function (info) {
                    const tooltip = document.createElement('div');
                    tooltip.className = 'fc-tooltip';
                    tooltip.style.position = 'absolute';
                    tooltip.style.background = '#fff';
                    tooltip.style.border = '1px solid #ccc';
                    tooltip.style.padding = '5px';
                    tooltip.style.boxShadow = '0px 4px 6px rgba(0, 0, 0, 0.1)';
                    tooltip.style.zIndex = 1000;
                    tooltip.style.pointerEvents = 'none';
                    tooltip.innerText = info.event.title;

                    document.body.appendChild(tooltip);

                    function positionTooltip(e) {
                        tooltip.style.left = `${e.pageX + 10}px`;
                        tooltip.style.top = `${e.pageY + 10}px`;
                    }
                    positionTooltip(info.jsEvent);

                    info.el.addEventListener('mousemove', positionTooltip);

                    info.el.tooltip = tooltip;
                },
                eventMouseLeave: function (info) {
                    if (info.el.tooltip) {
                        info.el.tooltip.remove();
                        delete info.el.tooltip;
                    }
                }
            });
            calendar.render();
        });
          function refreshCalendar() {
            const calendarContainer = document.getElementById('calendar-container');
            calendarContainer.classList.add('loading');

            fetch('/Calendar/LoadCalendarPartial')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('無法加載日曆頁面：' + response.statusText);
                    }
                    return response.text();
                })
                .then(html => {
                    calendarContainer.innerHTML = html;
                    calendarContainer.classList.remove('loading');

                    const calendarEl = document.getElementById('calendar');
                    initializeCalendar(calendarEl);
                })
                .catch(error => {
                    calendarContainer.classList.remove('loading');
                    console.error('刷新行事曆失敗:', error);
                });
        }



        // function refreshCalendar() {
        //     const calendarContainer = document.getElementById('calendar-container');
        //     calendarContainer.classList.add('loading');

        //     fetch('/Calendar/LoadCalendarPartial')
        //         .then(response => {
        //             if (!response.ok) {
        //                 throw new Error('無法加載日曆頁面：' + response.statusText);
        //             }
        //             return response.text();
        //         })
        //         .then(html => {
        //             calendarContainer.innerHTML = html;
        //             calendarContainer.classList.remove('loading');

        //             const calendarEl = document.getElementById('calendar');
        //             initializeCalendar(calendarEl);
        //         })
        //         .catch(error => {
        //             calendarContainer.classList.remove('loading');
        //             console.error('刷新行事曆失敗:', error);
        //         });
        // }

        // function refreshCounts() {
        //     fetch('/Home/GetDateLineCounts')
        //         .then(response => response.json())
        //         .then(data => {
        //             document.getElementById('bd-count').textContent = data.bdCount;
        //             document.getElementById('cp-count').textContent = data.cpCount;
        //         })
        //         .catch(error => console.error('無法刷新數據:', error));
        // }

        // function scheduleRefresh(hours) {
        //     function scheduleNext(hour) {
        //         const now = new Date();
        //         const nextRefresh = new Date();
        //         nextRefresh.setHours(hour, 0, 0, 0);

        //         if (now > nextRefresh) {
        //             nextRefresh.setDate(nextRefresh.getDate() + 1);
        //         }

        //         const delay = nextRefresh - now;
        //         setTimeout(() => {
        //             refreshCalendar();
        //             refreshCounts();
        //             scheduleNext(hour);
        //         }, delay);
        //     }

        //     hours.forEach(scheduleNext);
        // }

        // 初次加載
        // refreshCalendar();
        // refreshCounts();
        // 設置每天早上8點、中午12點、下午5點刷新
        // scheduleRefresh([8, 12, 17]);
    </script>
}
