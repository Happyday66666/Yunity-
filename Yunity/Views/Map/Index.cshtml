@{
    Layout = "_LayoutUser";
    ViewData["Title"] = "周邊商家與廠商";
}

<title>@ViewData["Title"]</title>
<!-- 引入 Font Awesome 以使用搜尋圖示 -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

<style>
    /* 地圖容器 */
    #map {
        width: 100%;
        height: 500px;
    }
    /* 搜尋與篩選區塊，背景白色 */
    .search-section {
        background-color: #fff;
        padding: 15px;
        margin-bottom: 15px;
        border-radius: 8px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.15);
    }
    /* 搜尋輸入框與按鈕整合於同一列，無間隔 */
    .search-container {
        display: inline-flex;
        align-items: stretch;
        width: 100%;
        max-width: 600px;
        border: 1px solid #ccc;
        border-radius: 30px;
        overflow: hidden;
    }

    .search-input {
        flex: 1;
        font-size: 16px;
        padding: 10px 12px;
        border: none;
        outline: none;
        background-color: transparent;
        color: #333;
    }

        .search-input::placeholder {
            color: #666;
        }

    .search-button {
        background-color: #fff; /* 按鍵底色白色 */
        color: #4285f4; /* 圖示顏色 */
        border: none;
        padding: 10px 16px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.2s;
    }

        .search-button:hover {
            background-color: #f2f2f2;
        }
    /* 分組按鍵區 */
    .filter-group {
        display: flex;
        align-items: center;
        flex-wrap: wrap;
        gap: 10px;
        justify-content: flex-start; /* 靠左對齊 */
        margin-top: 10px;
    }

    .filter-label {
        font-weight: bold;
        font-size: 16px;
        margin-right: 10px;
        color: #333;
    }

    .btn {
        font-size: 14px;
        padding: 8px 12px;
    }

    .mb-3 {
        margin-bottom: 1rem;
    }

    .text-center {
        text-align: center;
    }
</style>

<div class="container p-4">
    <h1 class="mb-3 text-center">周邊商家與廠商</h1>

    <!-- 搜尋與篩選區塊 -->
    <div class="search-section">
        <!-- 搜尋列：搜尋框(內含 icon 按鈕) 與所有篩選按鍵整列排列 -->
        <div class="search-container">
            <input type="text" id="searchInputVNS" class="search-input" placeholder="請輸入地址或關鍵字搜尋大樓附近地點">
            <button onclick="searchVendorAndStore()" class="search-button">
                <i class="fa fa-search"></i>
            </button>
        </div>
        <!-- 廠商篩選按鍵 -->
        <div class="filter-group">
            <span class="filter-label">廠商篩選:</span>
            <button class="btn btn-outline-primary" onclick="filterVendors('冷氣健檢')">冷氣健檢</button>
            <button class="btn btn-outline-primary" onclick="filterVendors('清潔服務')">清潔服務</button>
            <button class="btn btn-outline-primary" onclick="filterVendors('送洗服務')">送洗服務</button>
            <button class="btn btn-outline-primary" onclick="filterVendors('電器維修')">電器維修</button>
            <button class="btn btn-outline-secondary" onclick="filterVendors('')">廠商全部</button>
        </div>
        <!-- 周邊商家篩選按鍵 -->
        <div class="filter-group">
            <span class="filter-label">周邊商家篩選:</span>
            <button class="btn btn-outline-info" onclick="filterNearStores('便利商店')">便利商店</button>
            <button class="btn btn-outline-info" onclick="filterNearStores('咖啡廳')">咖啡廳</button>
            <button class="btn btn-outline-info" onclick="filterNearStores('藥局')">藥局</button>
            <button class="btn btn-outline-info" onclick="filterNearStores('超市')">超市</button>
            <button class="btn btn-outline-info" onclick="filterNearStores('飲料店')">飲料店</button>
            <button class="btn btn-outline-info" onclick="filterNearStores('麵包店')">麵包店</button>
            <button class="btn btn-outline-info" onclick="filterNearStores('餐廳')">餐廳</button>
            <button class="btn btn-outline-secondary" onclick="filterNearStores('')">周邊商家全部</button>
        </div>
    </div>

    <!-- 地圖 -->
    <div id="map"></div>
</div>

@section Scripts {
    <!-- 請替換 YOUR_API_KEY 為您自己的 Google Maps API 金鑰 -->
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBIajQpv1uduPYH696InRh95AnBigJP1f0&callback=initMap&libraries=places&region=TW&language=zh-TW"></script>
    <!-- 引入 SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // 從後端傳入的大樓地址與大樓名稱（透過 ViewBag 傳入）
        var buildingName = @Html.Raw(Json.Serialize(ViewBag.BuildingName));
        var buildingAddress = @Html.Raw(Json.Serialize(ViewBag.BuildingAddress));

        let map;
        let userMarker;
        let markers = [];
        let geocoder;
        let placesService;
        // 預設位置：高雄市中心
        let currentPos = { lat: 22.6273, lng: 120.3014 };

        // 從後端取得的廠商資料，初始為空陣列
        let vendorData = [];
        let buildingMarker;
        let nearStoreData = [];

        function initMap() {
            map = new google.maps.Map(document.getElementById("map"), {
                center: currentPos,
                zoom: 15,
                mapTypeControl: false  // 關閉地圖類型控制，移除衛星檢視
            });
            geocoder = new google.maps.Geocoder();
            placesService = new google.maps.places.PlacesService(map);

            if (buildingAddress && buildingAddress.trim() !== "") {
                setBuildingLocation(buildingAddress);
            }

            loadVendorData();
            loadNearStoreData();
        }

        function setBuildingLocation(address) {
            geocoder.geocode({ address: address }, function(results, status) {
                if (status === "OK" && results[0]) {
                    currentPos = results[0].geometry.location;
                    map.setCenter(currentPos);
                    buildingMarker = new google.maps.Marker({
                        map: map,
                        position: currentPos,
                        title: "您的大樓位置: " + buildingName
                    });
                } else {
                    console.error("大樓地址定位失敗: " + status);
                    map.setCenter(currentPos);
                }
            });
        }

        function loadVendorData() {
            fetch('/Map/GetVendorCoordinates')
                .then(response => response.json())
                .then(data => {
                    vendorData = data;
                    addVendorMarkers(vendorData);
                })
                .catch(error => {
                    console.error("取得廠商資料失敗:", error);
                    Swal.fire({ title: "錯誤", text: "取得廠商資料失敗。", icon: "error" });
                });
        }

        function addVendorMarkers(data) {
            data.forEach(vendor => {
                const lat = parseFloat(vendor.latitude);
                const lng = parseFloat(vendor.longitude);
                let iconUrl = "https://maps.google.com/mapfiles/ms/icons/blue-dot.png";
                if (vendor.serviceItem === "冷氣健檢") {
                    iconUrl = "https://maps.google.com/mapfiles/ms/icons/orange-dot.png";
                } else if (vendor.serviceItem === "清潔服務") {
                    iconUrl = "https://maps.google.com/mapfiles/ms/icons/blue-dot.png";
                } else if (vendor.serviceItem === "送洗服務") {
                    iconUrl = "https://maps.google.com/mapfiles/ms/icons/yellow-dot.png";
                } else if (vendor.serviceItem === "電器維修") {
                    iconUrl = "https://maps.google.com/mapfiles/ms/icons/green-dot.png";
                }
                const marker = new google.maps.Marker({
                    position: { lat: lat, lng: lng },
                    map: map,
                    title: vendor.companyName,
                    icon: iconUrl
                });
                markers.push(marker);
                const content = `
          <div style="max-width: 300px; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; padding: 10px;">
            <h4 style="margin: 0 0 5px; color: #2c3e50;">${vendor.companyName}</h4>
            <div style="margin-bottom: 8px;">
              <span style="font-weight: bold; color: #34495e;">服務項目:</span>
              <span style="color: #7f8c8d;">${vendor.serviceItem || "無"}</span>
            </div>
            <div style="margin-bottom: 8px;">
              <span style="font-weight: bold; color: #34495e;">地址:</span>
              <span style="color: #7f8c8d;">${vendor.address || "無"}</span>
            </div>
            <div style="margin-bottom: 8px;">
              <span style="font-weight: bold; color: #34495e;">電話:</span>
              <span style="color: #7f8c8d;">${vendor.phone || "無"}</span>
            </div>
            <div style="margin-bottom: 8px;">
              <span style="font-weight: bold; color: #34495e;">營業時間:</span>
              <span style="color: #7f8c8d;">${vendor.businessTime || "無"}</span>
            </div>
          </div>
        `;
                const infowindow = new google.maps.InfoWindow({ content: content });
                marker.addListener("click", () => { infowindow.open(map, marker); });
            });
        }

        function loadNearStoreData() {
            fetch('/Map/GetNearStoreCoordinates')
                .then(response => response.json())
                .then(data => {
                    nearStoreData = data;
                    addNearStoreMarkers(nearStoreData);
                })
                .catch(error => {
                    console.error("取得周邊商家資料失敗:", error);
                    Swal.fire({ title: "錯誤", text: "取得周邊商家資料失敗。", icon: "error" });
                });
        }

        function addNearStoreMarkers(data) {
            data.forEach(store => {
                const lat = parseFloat(store.latitude);
                const lng = parseFloat(store.longitude);
                let iconUrl = "https://maps.google.com/mapfiles/ms/icons/red-dot.png";
                if (store.type === "便利商店") {
                    iconUrl = "https://maps.google.com/mapfiles/ms/icons/blue-dot.png";
                } else if (store.type === "咖啡廳") {
                    iconUrl = "https://maps.google.com/mapfiles/ms/icons/green-dot.png";
                } else if (store.type === "藥局") {
                    iconUrl = "https://maps.google.com/mapfiles/ms/icons/purple-dot.png";
                } else if (store.type === "超市") {
                    iconUrl = "https://maps.google.com/mapfiles/ms/icons/yellow-dot.png";
                } else if (store.type === "飲料店") {
                    iconUrl = "https://maps.google.com/mapfiles/ms/icons/orange-dot.png";
                } else if (store.type === "麵包店") {
                    iconUrl = "https://maps.google.com/mapfiles/ms/icons/pink-dot.png";
                } else if (store.type === "餐廳") {
                    iconUrl = "https://maps.google.com/mapfiles/ms/icons/green-dot.png";
                }
                const marker = new google.maps.Marker({
                    position: { lat: lat, lng: lng },
                    map: map,
                    title: store.name,
                    icon: iconUrl
                });
                markers.push(marker);
                const content = `
          <div style="display: flex; width: 500px; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            <div style="flex: 1; max-width: 40%;">
              <img src="${store.photo}" alt="${store.name}" style="width: 100%; height: auto; object-fit: cover; border-radius: 4px;" />
            </div>
            <div style="flex: 1; padding-left: 10px; font-size: 14px; color: #7f8c8d; line-height: 1.5;">
              <h4 style="margin: 0 0 8px; color: #2c3e50;">${store.name}</h4>
              <p style="margin: 4px 0;"><strong style="color: #34495e;">電話:</strong> ${store.phone || "無"}</p>
              <p style="margin: 4px 0;"><strong style="color: #34495e;">地址:</strong> ${store.address || "無"}</p>
              <p style="margin: 4px 0;"><strong style="color: #34495e;">營業時間:</strong> ${store.openTime || "無"}</p>
              <p style="margin: 4px 0;"><strong style="color: #34495e;">類型:</strong> ${store.type || "無"}</p>
              <p style="margin: 4px 0;"><strong style="color: #34495e;">資訊:</strong> ${store.info || "無"}</p>
            </div>
          </div>
        `;
                const infoWindow = new google.maps.InfoWindow({ content: content });
                marker.addListener("click", () => { infoWindow.open(map, marker); });
            });
        }

        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition, function (error) {
                    Swal.fire({ title: "定位失敗", text: error.message, icon: "error" });
                });
            } else {
                Swal.fire({ title: "錯誤", text: "您的瀏覽器不支援定位功能。", icon: "error" });
            }
        }

        function showPosition(position) {
            const pos = { lat: position.coords.latitude, lng: position.coords.longitude };
            currentPos = pos;
            map.setCenter(pos);
            if (userMarker) {
                userMarker.setPosition(pos);
            } else {
                userMarker = new google.maps.Marker({ position: pos, map: map, title: "我的位置" });
            }
            Swal.fire({ title: "取得定位", text: `經度 ${pos.lng}，緯度 ${pos.lat}`, icon: "info" });
        }

         document.getElementById("searchInputVNS").addEventListener("keydown", function (event) {
            if (event.key === "Enter") {
                searchVendorAndStore();
            }
        });


        function searchVendorAndStore() {
            const query = document.getElementById("searchInputVNS").value.trim().toLowerCase();
            if (!query) {
                Swal.fire({ title: "提示", text: "請先輸入關鍵字！", icon: "warning" });
                return;
            }
            clearMarkers();
            let filteredVendors = vendorData.filter(vendor =>
                (vendor.companyName && vendor.companyName.toLowerCase().includes(query)) ||
                (vendor.serviceItem && vendor.serviceItem.toLowerCase().includes(query)) ||
                (vendor.address && vendor.address.toLowerCase().includes(query))
            );
            let filteredStores = nearStoreData.filter(store =>
                (store.name && store.name.toLowerCase().includes(query)) ||
                (store.address && store.address.toLowerCase().includes(query)) ||
                (store.type && store.type.toLowerCase().includes(query)) ||
                (store.info && store.info.toLowerCase().includes(query))
            );
            if (filteredVendors.length === 0 && filteredStores.length === 0) {
                Swal.fire({ title: "提示", text: "找不到符合的搜尋結果！", icon: "info" });
                return;
            }
            addVendorMarkers(filteredVendors);
            addNearStoreMarkers(filteredStores);
        }

        function adjustMapToFitResults(vendors, stores) {
            let bounds = new google.maps.LatLngBounds();
            let hasResults = false;

            vendors.forEach(vendor => {
                bounds.extend(new google.maps.LatLng(parseFloat(vendor.latitude), parseFloat(vendor.longitude)));
                hasResults = true;
            });

            stores.forEach(store => {
                bounds.extend(new google.maps.LatLng(parseFloat(store.latitude), parseFloat(store.longitude)));
                hasResults = true;
            });

            if (hasResults) {
                map.fitBounds(bounds);
            }
        }


        function clearMarkers() {
            markers.forEach(marker => marker.setMap(null));
            markers = [];
        }

        function filterVendors(service) {
            clearMarkers();
            let filteredData = service === "" ? vendorData : vendorData.filter(vendor => vendor.serviceItem === service);
            if (filteredData.length === 0) {
                Swal.fire({ title: "提示", text: "找不到符合此服務項目的廠商！", icon: "info", confirmButtonText: "確定" });
            } else {
                addVendorMarkers(filteredData);
            }
        }

        function filterNearStores(storeType) {
            clearMarkers();
            let filteredData = storeType === "" ? nearStoreData : nearStoreData.filter(store => store.type === storeType);
            if (filteredData.length === 0) {
                Swal.fire({ title: "提示", text: "找不到符合此商店類型的周邊商家！", icon: "info", confirmButtonText: "確定" });
            } else {
                addNearStoreMarkers(filteredData);
            }
        }
    </script>
}
