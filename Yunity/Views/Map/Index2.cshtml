@{
    Layout = "_LayoutUser";
}
<!doctype html>
<html lang="en">
<head>
    <title>我的 OpenStreetMap 搜尋</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />

    <!-- Material Icons -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0&icon_names=home_pin" />
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" />
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <!-- jQuery UI CSS (選用) -->
    <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/south-street/jquery-ui.css">
    <!-- jQuery & jQuery UI -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <!-- Bootstrap JS (使用 bundle 版本，包含 Popper) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Leaflet CSS 與 JS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
          crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
            crossorigin=""></script>
    <style>
        #omap {
            width: 100%;
            height: 500px;
            border: 1px solid #ccc;
        }
    </style>
</head>
<body class="p-4">
    <div class="container">
        <h1 class="mb-4">我的 OpenStreetMap 搜尋</h1>

        <!-- 地址搜尋 -->
        <div class="mb-4">
            <div class="input-group">
                <input type="text" id="addressInput" class="form-control" placeholder="輸入您的地址">
                <button onclick="searchAddress()" class="btn btn-primary">搜尋地址</button>
            </div>
        </div>

        <!-- 商家搜尋按鈕 -->
        <div class="mb-4">
            <div class="btn-group" role="group" aria-label="商家搜尋">
                <button onclick="searchBusinesses('restaurant')" class="btn btn-secondary">
                    <i class="bi bi-shop"></i> 餐廳
                </button>
                <button onclick="searchBusinesses('fuel')" class="btn btn-secondary">
                    <span class="material-icons" style="font-size:24px;">local_gas_station</span> 加油站
                </button>
                <button onclick="searchBusinesses('hospital')" class="btn btn-secondary">
                    <i class="bi bi-hospital"></i> 醫院
                </button>
                <button onclick="searchBusinesses('bank')" class="btn btn-secondary">
                    <i class="bi bi-bank"></i> 銀行
                </button>
                <button onclick="searchBusinesses('convenience')" class="btn btn-secondary">
                    <i class="bi bi-cart-check"></i> 便利商店
                </button>
                <button onclick="searchBusinesses('park')" class="btn btn-secondary">
                    <i class="bi bi-tree"></i> 公園
                </button>
            </div>
        </div>

        <!-- 關鍵字搜尋 -->
        <div class="mb-4">
            <div class="input-group">
                <input type="text" id="keywordInput" class="form-control" placeholder="輸入關鍵字搜尋周圍的地標 (例如：咖啡, 書店)" />
                <button onclick="searchKeyword()" class="btn btn-warning">關鍵字搜尋</button>
            </div>
        </div>

        <!-- 定位按鈕 -->
        <div class="mb-4">
            <button onclick="getLocation()" class="btn btn-info" title="我的位置">
                <span class="material-symbols-outlined" style="font-size:40px">home_pin</span> 取得我的座標
            </button>
        </div>

        <!-- 地圖容器 -->
        <div id="omap"></div>
    </div>

    <script>
        // 全域變數
        let businessMarkers = [];
        let keywordMarkers = [];
        let userMarker;

        // 初始化地圖：設定預設中心與縮放等級
        let map = L.map('omap').setView([23.5, 121], 7);
        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: 'Map data © <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors'
        }).addTo(map);

        // 使用 Material Icons 作為使用者圖示
        var userIcon = L.divIcon({
            html: '<span class="material-symbols-outlined" style="font-size:50px;color:orange;">home_pin</span>',
            className: '',
            iconSize: [50, 50],
            iconAnchor: [25, 50],
            popupAnchor: [0, -50]
        });

        // 取得使用者定位，更新 userMarker 並調整地圖中心
        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition);
            } else {
                alert("您的瀏覽器不支援定位功能。");
            }
        }
        function showPosition(position) {
            const lat = position.coords.latitude;
            const lon = position.coords.longitude;
            if (userMarker) {
                userMarker.setLatLng([lat, lon]);
            } else {
                userMarker = L.marker([lat, lon], { icon: userIcon, title: '我的位置' }).addTo(map);
            }
            map.setView([lat, lon], 17);
        }

        // 使用 Nominatim 搜尋地址
        async function searchAddress() {
            const address = document.getElementById('addressInput').value;
            if (!address) {
                alert("請先輸入地址！");
                return;
            }
            const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`;
            try {
                const response = await fetch(url);
                const data = await response.json();
                if (data.length > 0) {
                    const { lat, lon } = data[0];
                    if (userMarker) {
                        userMarker.setLatLng([lat, lon]);
                    } else {
                        userMarker = L.marker([lat, lon], { title: '搜尋位置' }).addTo(map);
                    }
                    map.setView([lat, lon], 15);
                } else {
                    alert("找不到地址，請重新輸入。");
                }
            } catch (error) {
                console.error(error);
                alert("搜尋地址時發生錯誤。");
            }
        }

        // 根據 tag 返回對應圖示
        function getBusinessIcon(tag) {
            let html = '';
            switch (tag) {
                case 'restaurant':
                    html = '<i class="bi bi-shop" style="font-size:24px;color:red;"></i>';
                    break;
                case 'fuel':
                    html = '<span class="material-icons" style="font-size:24px;color:blue;">local_gas_station</span>';
                    break;
                case 'hospital':
                    html = '<i class="bi bi-hospital" style="font-size:24px;color:green;"></i>';
                    break;
                case 'bank':
                    html = '<i class="bi bi-bank" style="font-size:24px;color:purple;"></i>';
                    break;
                case 'convenience':
                    // OSM 中便利商店通常以 shop=convenience 表示
                    html = '<i class="bi bi-cart-check" style="font-size:24px;color:orange;"></i>';
                    break;
                case 'park':
                    html = '<i class="bi bi-tree" style="font-size:24px;color:darkgreen;"></i>';
                    break;
                default:
                    html = '<i class="bi bi-geo-alt" style="font-size:24px;color:black;"></i>';
                    break;
            }
            return L.divIcon({
                html: html,
                className: '',
                iconSize: [24, 24],
                iconAnchor: [12, 24],
                popupAnchor: [0, -24]
            });
        }

        // 商家搜尋，依據 tag 搜尋並顯示對應圖示與詳細資訊
        async function searchBusinesses(tag) {
            // 移除現有商家標記
            businessMarkers.forEach(marker => map.removeLayer(marker));
            businessMarkers = [];

            const center = map.getCenter();
            let query = '';
            if (tag === 'park') {
                query = `[out:json];node[leisure="park"](around:1000,${center.lat},${center.lng});out;`;
            } else {
                query = `[out:json];node[amenity="${tag}"](around:1000,${center.lat},${center.lng});out;`;
            }
            const url = 'https://overpass-api.de/api/interpreter?data=' + encodeURIComponent(query);
            try {
                const response = await fetch(url);
                const data = await response.json();
                if (data.elements && data.elements.length > 0) {
                    data.elements.forEach(element => {
                        const icon = getBusinessIcon(tag);
                        // 建立 Popup 內容，包含詳細資訊（名稱、營業時間、地址、圖片）
                        let popupContent = "";
                        if (element.tags && element.tags.name) {
                            popupContent += `<h5>${element.tags.name}</h5>`;
                        } else {
                            popupContent += `<h5>${tag}</h5>`;
                        }
                        if (element.tags && element.tags.opening_hours) {
                            popupContent += `<p><strong>營業時間:</strong> ${element.tags.opening_hours}</p>`;
                        }
                        if (element.tags && (element.tags['addr:housenumber'] || element.tags['addr:street'] || element.tags['addr:city'])) {
                            popupContent += `<p><strong>地址:</strong> `;
                            if (element.tags['addr:housenumber']) {
                                popupContent += `${element.tags['addr:housenumber']} `;
                            }
                            if (element.tags['addr:street']) {
                                popupContent += `${element.tags['addr:street']}, `;
                            }
                            if (element.tags['addr:city']) {
                                popupContent += `${element.tags['addr:city']}`;
                            }
                            popupContent += `</p>`;
                        }
                        if (element.tags && element.tags.image) {
                            popupContent += `<img src="${element.tags.image}" alt="${element.tags.name || tag}" style="max-width:100px; display:block; margin-top:5px;">`;
                        }
                        const marker = L.marker([element.lat, element.lon], { icon: icon })
                            .addTo(map)
                            .bindPopup(popupContent, { closeButton: true });
                        marker.on('click', function() {
                            this.openPopup();
                        });
                        businessMarkers.push(marker);
                    });
                } else {
                    alert('附近找不到相關商家。');
                }
            } catch (error) {
                console.error(error);
                alert('搜尋商家時發生錯誤。');
            }
        }

        // 關鍵字搜尋：搜尋用戶輸入的關鍵字，依照名稱關鍵字搜尋並以預設圖示顯示
        async function searchKeyword() {
            // 移除現有關鍵字標記
            keywordMarkers.forEach(marker => map.removeLayer(marker));
            keywordMarkers = [];

            const keyword = document.getElementById('keywordInput').value;
            if (!keyword) {
                alert("請輸入搜尋關鍵字！");
                return;
            }

            let center = map.getCenter();
            if (userMarker) {
                center = userMarker.getLatLng();
            }
            const query = `[out:json];node["name"~"${keyword}",i](around:1000,${center.lat},${center.lng});out;`;
            const url = 'https://overpass-api.de/api/interpreter?data=' + encodeURIComponent(query);
            try {
                const response = await fetch(url);
                const data = await response.json();
                if (data.elements && data.elements.length > 0) {
                    data.elements.forEach(element => {
                        const marker = L.marker([element.lat, element.lon], { title: element.tags.name || keyword })
                            .addTo(map)
                            .bindPopup(element.tags.name || keyword, { closeButton: true });
                        marker.on('click', function() {
                            this.openPopup();
                        });
                        keywordMarkers.push(marker);
                    });
                } else {
                    alert("找不到符合關鍵字的地標。");
                }
            } catch (error) {
                console.error(error);
                alert("搜尋關鍵字時發生錯誤。");
            }
        }
    </script>
</body>
</html>
